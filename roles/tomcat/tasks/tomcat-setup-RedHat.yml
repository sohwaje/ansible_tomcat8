- name: Add EPEL repository
  yum:
    name: epel-release
    state: present

- name: Install basic packages
  package:
    name: ['vim','bash-completion','tmux','tree','htop','wget','unzip','curl','git']
    state: present

- name: Install Java 8 CentOS
  yum:
    name: java-1.8.0-openjdk
    state: present

- name: Add "{{ remote_user }}"  group
  group:
    name: "{{ remote_user }}"

- name: Add "{{ remote_user }}" user
  user:
    name: "{{ remote_user }}"
    group: "{{ remote_user }}"
    home: "/home/{{ remote_user }}/{{ instance }}"
    createhome: no
    system: yes

- name: Download Tomcat
  get_url:
    url: "{{ tomcat_archive_url }}"
    dest: "{{ tomcat_archive_dest }}"

- name: Create a tomcat directory
  file:
    path: "/home/{{ remote_user }}/{{ instance }}"
    state: directory
    owner: "{{ remote_user }}"
    group: "{{ remote_user }}"

- name: Extract tomcat archive
  unarchive:
    src: "{{ tomcat_archive_dest }}"
    dest: "/home/{{ remote_user }}/{{ instance }}"
    owner: "{{ remote_user }}"
    group: "{{ remote_user }}"
    remote_src: yes
    extra_opts: "--strip-components=1"
    creates: "/home/{{ remote_user }}/{{ instance }}/bin"

- name: Copy tomcat variable file setenv.sh
  template:
    src: templates/setenv.sh
    dest: "/home/{{ remote_user }}/{{ instance }}/bin"

- name: Copy server.xml
  template:
    sec: templates/server.xml
    dest: "/home/{{ remote_user }}/{{ instance }}/conf"

- name: Set UI access credentials
  template:
    src: tomcat-users.xml.j2
    dest: "/home/{{ remote_user }}/{{ instance }}/conf/tomcat-users.xml"
  notify: restart tomcat

- name: Allow access to Manager and Host Manager apps from any IP
  template:
    src: context.xml.j2
    dest: "{{ item }}"
  with_items:
    - "/home/{{ remote_user }}/{{ instance }}/webapps/host-manager/META-INF/context.xml"
    - "/home/{{ remote_user }}/{{ instance }}/webapps/manager/META-INF/context.xml"

# 톰캣 시작 또는 중지
 - name: startup or stop servers
   vars_prompt:
     - name: select
       prompt: "startup or stop servers? [default: startup] "
       private: no
       default: 'startup'

  - name: "{{ select }} tasks starting"
    shell: sh "./{{ select }}.sh"
    args:
      chdir: "/home/{{ remote_user }}/{{ instance }}/bin"
