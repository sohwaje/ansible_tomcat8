- name: Add EPEL repository
  yum:
    name: epel-release
    state: present
  vars:
    ansible_python_interpreter: /usr/bin/python2.7

- name: Install basic packages
  package:
    name: ['vim','bash-completion','tmux','tree','htop','wget','unzip','curl','git']
    state: present
  vars:
    ansible_python_interpreter: /usr/bin/python2.7

- name: Install Java 8 CentOS
  yum:
    name: java-1.8.0-openjdk
    state: present
  vars:
    ansible_python_interpreter: /usr/bin/python2.7

- name: Add "{{ remote_user }}"  group
  group:
    name: "{{ remote_user }}"

- name: Download Tomcat
  get_url:
    url: "{{ tomcat_archive_url }}"
    dest: "{{ tomcat_archive_dest }}"

- name: Create a tomcat directory
  file:
    path: "{{ tomcat_dir }}"
    state: directory
    owner: "{{ remote_user }}"
    group: "{{ remote_user }}"

- name: Create a source directory if it does not exist
  file:
    path: "{{ source_dir }}"
    state: directory
    mode: '0755'

- name: Extract tomcat archive
  unarchive:
    src: "{{ tomcat_archive_dest }}"
    dest: "{{ tomcat_dir }}"
    owner: "{{ remote_user }}"
    group: "{{ remote_user }}"
    remote_src: yes
    extra_opts: "--strip-components=1"
    creates: "{{ tomcat_dir }}/bin"

- name: Copy tomcat service file
  template:
    src: templates/tomcat.service.j2
    dest: "/etc/systemd/system/{{ instance }}.service"
  when: ansible_service_mgr == "systemd"

- name: Start and enable tomcat
  service:
    daemon_reload: yes
    name: {{ instance }}
    state: started
    enabled: yes
  when: ansible_service_mgr == "systemd"

- name: Copy tomcat variable file setenv.sh
  template:
    src: templates/setenv.sh
    dest: "{{ tomcat_dir }}/bin/setenv.sh"

- name: Give execute permission
  file:
    path: "{{ tomcat_dir }}/bin/setenv.sh"
    mode: '0755'

- name: Copy mysql-commector
  copy:
    src: templates/mysql-connector-java-8.0.21.jar
    dest: "{{ tomcat_dir }}/lib/mysql-connector-java-8.0.21.jar"

- name: Copy tomcat-extension
  copy:
    src: templates/tomcat-extensions.jar
    dest: "{{ tomcat_dir }}/lib/tomcat-extensions.jar"

- name: Copy ROOT.xml
  template:
    src: templates/ROOT.xml
    dest: "{{ tomcat_dir }}/conf/Catalina/localhost/ROOT.xml"

- name: Copy server.xml
  template:
    src: templates/server.xml
    dest: "{{ tomcat_dir }}/conf/server.xml"

- name: Set UI access credentials
  template:
    src: templates/tomcat-users.xml.j2
    dest: "{{ tomcat_dir }}/conf/tomcat-users.xml"

- name: Allow access to Manager and Host Manager apps from any IP
  template:
    src: templates/context.xml.j2
    dest: "{{ item }}"
  with_items:
    - "{{ tomcat_dir }}/webapps/host-manager/META-INF/context.xml"
    - "{{ tomcat_dir }}/webapps/manager/META-INF/context.xml"
  notify: Tomcat start
